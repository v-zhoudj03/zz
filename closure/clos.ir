; ModuleID = '-'
source_filename = "-"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.9"

%C4clos6aClass = type <{ %swift.refcounted, %Si }>
%swift.refcounted = type { %swift.type*, i32, i32 }
%swift.type = type { i64 }
%Si = type <{ i64 }>
%swift.function = type { i8*, %swift.refcounted* }
%Vs5Int32 = type <{ i32 }>
%Sp = type <{ i8* }>
%swift.full_boxmetadata = type { void (%swift.refcounted*)*, i8**, %swift.type, i32, i8* }
%objc_class = type { %objc_class*, %objc_class*, %swift.opaque*, %swift.opaque*, i64 }
%swift.opaque = type opaque
%swift.type_metadata_record = type { i32, i32 }
%swift.unowned = type { %swift.refcounted* }
%swift.weak = type { %swift.refcounted* }

@_Tv4clos2c1CS_6aClass = hidden global %C4clos6aClass* null, align 8
@_Tv4clos2c2CS_6aClass = hidden global %C4clos6aClass* null, align 8
@_Tv4clos5fSpecFT_T_ = hidden global %swift.function zeroinitializer, align 8
@_TZvOs11CommandLine5_argcVs5Int32 = external global %Vs5Int32, align 4
@globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4 = external global i64, align 8
@_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___ = external global %Sp, align 8
@_swift_unownedRetain = external global void (%swift.refcounted*)*
@0 = private constant [20 x i8] c"XwGSqC4clos6aClass_\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@"\01l__swift3_box_descriptor" = private constant <{ i32, i32, i32, i32 }> <{ i32 1, i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([20 x i8]* @0 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32 }>* @"\01l__swift3_box_descriptor" to i64), i64 12)) to i32) }>, section "__TEXT,__swift3_capture, regular, no_dead_strip", align 4
@_swift_deallocObject = external global void (%swift.refcounted*, i64, i64)*
@metadata = private constant %swift.full_boxmetadata { void (%swift.refcounted*)* @objectdestroy, i8** null, %swift.type { i64 64 }, i32 16, i8* bitcast (<{ i32, i32, i32, i32 }>* @"\01l__swift3_box_descriptor" to i8*) }
@_swift_allocObject = external global %swift.refcounted* (%swift.type*, i64, i64)*
@_swift_retain = external global void (%swift.refcounted*)*
@_swift_release = external global void (%swift.refcounted*)*
@_swift_unownedRetainStrong = external global void (%swift.refcounted*)*
@1 = private constant [16 x i8] c"XoC4clos6aClass\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@2 = private constant [22 x i8] c"XbXwGSqC4clos6aClass_\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@"\01l__swift3_capture_descriptor" = private constant <{ i32, i32, i32, i32, i32 }> <{ i32 2, i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([16 x i8]* @1 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([22 x i8]* @2 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i64), i64 16)) to i32) }>, section "__TEXT,__swift3_capture, regular, no_dead_strip", align 4
@_swift_unownedRelease = external global void (%swift.refcounted*)*
@metadata.2 = private constant %swift.full_boxmetadata { void (%swift.refcounted*)* @objectdestroy.1, i8** null, %swift.type { i64 64 }, i32 16, i8* bitcast (<{ i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i8*) }
@_TWVBo = external global i8*, align 8
@_TMmC4clos6aClass = hidden global %objc_class { %objc_class* @"OBJC_METACLASS_$_SwiftObject", %objc_class* @"OBJC_METACLASS_$_SwiftObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtC4clos6aClass to i64) }, align 8
@"OBJC_CLASS_$_SwiftObject" = external global %objc_class, align 8
@_objc_empty_cache = external global %swift.opaque
@_TWvdvC4clos6aClass5valueSi = hidden constant i64 16, align 8
@3 = private unnamed_addr constant [6 x i8] c"value\00"
@4 = private unnamed_addr constant [1 x i8] zeroinitializer
@"OBJC_METACLASS_$_SwiftObject" = external global %objc_class, align 8
@5 = private unnamed_addr constant [17 x i8] c"_TtC4clos6aClass\00"
@_METACLASS_DATA__TtC4clos6aClass = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @5, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@_IVARS__TtC4clos6aClass = private constant { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] } { i32 32, i32 1, [1 x { i64*, i8*, i8*, i32, i32 }] [{ i64*, i8*, i8*, i32, i32 } { i64* @_TWvdvC4clos6aClass5valueSi, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @4, i64 0, i64 0), i32 3, i32 8 }] }, section "__DATA, __objc_const", align 8
@_DATA__TtC4clos6aClass = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, i8* } { i32 128, i32 16, i32 24, i32 0, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @5, i64 0, i64 0), i8* null, i8* null, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }* @_IVARS__TtC4clos6aClass, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@6 = private constant [14 x i8] c"C4clos6aClass\00"
@7 = private constant [7 x i8] c"value\00\00"
@_TMnC4clos6aClass = hidden constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([14 x i8]* @6 to i64), i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC4clos6aClass to i64)) to i32), i32 1, i32 14, i32 trunc (i64 sub (i64 ptrtoint ([7 x i8]* @7 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC4clos6aClass to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint (%swift.type** (%swift.type*)* @get_field_types_aClass to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC4clos6aClass to i64), i64 16)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint (%swift.type* ()* @_TMaC4clos6aClass to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC4clos6aClass to i64), i64 24)) to i32), i32 10, i32 0, i32 0, i32 0 }>, section "__TEXT,__const", align 8
@_TWoFC4clos6aClassg5valueSi = hidden constant i64 96, align 8
@_TWoFC4clos6aClasss5valueSi = hidden constant i64 104, align 8
@_TWoFC4clos6aClassm5valueSi = hidden constant i64 112, align 8
@_TWoFC4clos6aClassCfT_S0_ = hidden constant i64 120, align 8
@_TMLC4clos6aClass = hidden global %swift.type* null, align 8
@_swift_getInitializedObjCClass = external global %objc_class* (%objc_class*)*
@_TMfC4clos6aClass = internal global <{ void (%C4clos6aClass*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, i64 (%C4clos6aClass*)*, void (i64, %C4clos6aClass*)*, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)*, %C4clos6aClass* (%C4clos6aClass*)*, i64 }> <{ void (%C4clos6aClass*)* @_TFC4clos6aClassD, i8** @_TWVBo, i64 ptrtoint (%objc_class* @_TMmC4clos6aClass to i64), %objc_class* @"OBJC_CLASS_$_SwiftObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, i8* }* @_DATA__TtC4clos6aClass to i64), i64 1), i32 3, i32 0, i32 24, i16 7, i16 0, i32 136, i32 16, i64 sub (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC4clos6aClass to i64), i64 add (i64 ptrtoint (<{ void (%C4clos6aClass*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, i64 (%C4clos6aClass*)*, void (i64, %C4clos6aClass*)*, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)*, %C4clos6aClass* (%C4clos6aClass*)*, i64 }>* @_TMfC4clos6aClass to i64), i64 80)), i8* null, i64 (%C4clos6aClass*)* @_TFC4clos6aClassg5valueSi, void (i64, %C4clos6aClass*)* @_TFC4clos6aClasss5valueSi, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)* @_TFC4clos6aClassm5valueSi, %C4clos6aClass* (%C4clos6aClass*)* @_TFC4clos6aClasscfT_S0_, i64 16 }>, align 8
@8 = private constant [14 x i8] c"C4clos6aClass\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@9 = private constant [3 x i8] c"Si\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@10 = private constant [6 x i8] c"value\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@"\01l__swift3_reflection_metadata" = private constant <{ i32, i16, i16, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([14 x i8]* @8 to i64), i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata" to i64)) to i32), i16 1, i16 12, i32 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @9 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata" to i64), i64 16)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([6 x i8]* @10 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata" to i64), i64 20)) to i32) }>, section "__TEXT,__swift3_fieldmd, regular, no_dead_strip", align 4
@"\01l_type_metadata_table" = private constant [1 x %swift.type_metadata_record] [%swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ void (%C4clos6aClass*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, i64 (%C4clos6aClass*)*, void (i64, %C4clos6aClass*)*, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)*, %C4clos6aClass* (%C4clos6aClass*)*, i64 }>, <{ void (%C4clos6aClass*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, i64 (%C4clos6aClass*)*, void (i64, %C4clos6aClass*)*, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)*, %C4clos6aClass* (%C4clos6aClass*)*, i64 }>* @_TMfC4clos6aClass, i32 0, i32 2) to i64), i64 ptrtoint ([1 x %swift.type_metadata_record]* @"\01l_type_metadata_table" to i64)) to i32), i32 15 }], section "__TEXT, __swift2_types, regular, no_dead_strip", align 8
@__swift_reflection_version = linkonce_odr hidden constant i16 1
@field_type_vector_aClass = private global %swift.type** null
@_swift_slowAlloc = external global i8* (i64, i64)*
@_TMSi = external global %swift.type, align 8
@_swift_slowDealloc = external global void (i8*, i64, i64)*
@objc_classes = internal global [1 x i8*] [i8* bitcast (%swift.type* @_TMC4clos6aClass to i8*)], section "__DATA, __objc_classlist, regular, no_dead_strip", align 8
@llvm.used = appending global [6 x i8*] [i8* bitcast (<{ i32, i32, i32, i32 }>* @"\01l__swift3_box_descriptor" to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i8*), i8* bitcast (<{ i32, i16, i16, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata" to i8*), i8* bitcast ([1 x %swift.type_metadata_record]* @"\01l_type_metadata_table" to i8*), i8* bitcast (i16* @__swift_reflection_version to i8*), i8* bitcast ([1 x i8*]* @objc_classes to i8*)], section "llvm.metadata", align 8

@_TMC4clos6aClass = hidden alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%C4clos6aClass*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, i64 (%C4clos6aClass*)*, void (i64, %C4clos6aClass*)*, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)*, %C4clos6aClass* (%C4clos6aClass*)*, i64 }>, <{ void (%C4clos6aClass*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, i64 (%C4clos6aClass*)*, void (i64, %C4clos6aClass*)*, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)*, %C4clos6aClass* (%C4clos6aClass*)*, i64 }>* @_TMfC4clos6aClass, i32 0, i32 2) to %swift.type*)

define i32 @main(i32, i8**) #0 {
entry:
  %2 = alloca %swift.unowned, align 8
  %3 = bitcast i8** %1 to i8*
  %4 = bitcast %swift.unowned* %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4)
  store i32 %0, i32* getelementptr inbounds (%Vs5Int32, %Vs5Int32* @_TZvOs11CommandLine5_argcVs5Int32, i32 0, i32 0), align 4
  %5 = load i64, i64* @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %once_done, label %once_not_done

once_not_done:                                    ; preds = %entry
  call void @swift_once(i64* @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4, i8* bitcast (void ()* @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4 to i8*))
  br label %once_done

once_done:                                        ; preds = %once_not_done, %entry
  %7 = load i64, i64* @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4, align 8
  %8 = icmp eq i64 %7, -1
  call void @llvm.assume(i1 %8)
  store i8* %3, i8** getelementptr inbounds (%Sp, %Sp* @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___, i32 0, i32 0), align 8
  %9 = call %swift.type* @_TMaC4clos6aClass() #5
  %10 = call %C4clos6aClass* @_TFC4clos6aClassCfT_S0_(%swift.type* %9)
  store %C4clos6aClass* %10, %C4clos6aClass** @_Tv4clos2c1CS_6aClass, align 8
  %11 = call %C4clos6aClass* @_TFC4clos6aClassCfT_S0_(%swift.type* %9)
  store %C4clos6aClass* %11, %C4clos6aClass** @_Tv4clos2c2CS_6aClass, align 8
  %12 = load %C4clos6aClass*, %C4clos6aClass** @_Tv4clos2c1CS_6aClass, align 8
  call void bitcast (void (%swift.refcounted*)* @rt_swift_unownedRetain to void (%C4clos6aClass*)*)(%C4clos6aClass* %12) #2
  %13 = bitcast %swift.unowned* %2 to %C4clos6aClass**
  store %C4clos6aClass* %12, %C4clos6aClass** %13, align 8
  %14 = call noalias %swift.refcounted* @rt_swift_allocObject(%swift.type* getelementptr inbounds (%swift.full_boxmetadata, %swift.full_boxmetadata* @metadata, i32 0, i32 2), i64 24, i64 7) #2
  %15 = bitcast %swift.refcounted* %14 to <{ %swift.refcounted, %swift.weak }>*
  %16 = getelementptr inbounds <{ %swift.refcounted, %swift.weak }>, <{ %swift.refcounted, %swift.weak }>* %15, i32 0, i32 1
  %17 = load %C4clos6aClass*, %C4clos6aClass** @_Tv4clos2c2CS_6aClass, align 8
  %18 = bitcast %C4clos6aClass* %17 to %swift.refcounted*
  call void @rt_swift_retain(%swift.refcounted* %18) #2
  %19 = ptrtoint %C4clos6aClass* %17 to i64
  %20 = inttoptr i64 %19 to %C4clos6aClass*
  call void bitcast (void (%swift.weak*, %swift.refcounted*)* @swift_weakInit to void (%swift.weak*, %C4clos6aClass*)*)(%swift.weak* %16, %C4clos6aClass* %20) #2
  %21 = inttoptr i64 %19 to %swift.refcounted*
  call void @rt_swift_release(%swift.refcounted* %21) #2
  call void bitcast (void (%swift.refcounted*)* @rt_swift_unownedRetainStrong to void (%C4clos6aClass*)*)(%C4clos6aClass* %12) #2
  call void bitcast (void (%swift.refcounted*)* @rt_swift_unownedRetain to void (%C4clos6aClass*)*)(%C4clos6aClass* %12) #2
  call void bitcast (void (%swift.refcounted*)* @rt_swift_release to void (%C4clos6aClass*)*)(%C4clos6aClass* %12) #2
  call void @rt_swift_retain(%swift.refcounted* %14) #2
  %22 = call noalias %swift.refcounted* @rt_swift_allocObject(%swift.type* getelementptr inbounds (%swift.full_boxmetadata, %swift.full_boxmetadata* @metadata.2, i32 0, i32 2), i64 32, i64 7) #2
  %23 = bitcast %swift.refcounted* %22 to <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>*
  %24 = getelementptr inbounds <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>, <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>* %23, i32 0, i32 1
  %25 = bitcast %swift.unowned* %24 to %C4clos6aClass**
  store %C4clos6aClass* %12, %C4clos6aClass** %25, align 8
  %26 = getelementptr inbounds <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>, <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>* %23, i32 0, i32 2
  store %swift.refcounted* %14, %swift.refcounted** %26, align 8
  store i8* bitcast (void (%swift.refcounted*)* @_TPA__TF4closU_FT_T_ to i8*), i8** getelementptr inbounds (%swift.function, %swift.function* @_Tv4clos5fSpecFT_T_, i32 0, i32 0), align 8
  store %swift.refcounted* %22, %swift.refcounted** getelementptr inbounds (%swift.function, %swift.function* @_Tv4clos5fSpecFT_T_, i32 0, i32 1), align 8
  call void @rt_swift_release(%swift.refcounted* %14) #2
  call void bitcast (void (%swift.refcounted*)* @rt_swift_unownedRelease to void (%C4clos6aClass*)*)(%C4clos6aClass* %12) #2
  %27 = load i8*, i8** getelementptr inbounds (%swift.function, %swift.function* @_Tv4clos5fSpecFT_T_, i32 0, i32 0), align 8
  %28 = load %swift.refcounted*, %swift.refcounted** getelementptr inbounds (%swift.function, %swift.function* @_Tv4clos5fSpecFT_T_, i32 0, i32 1), align 8
  call void @rt_swift_retain(%swift.refcounted* %28) #2
  %29 = bitcast i8* %27 to void (%swift.refcounted*)*
  call void %29(%swift.refcounted* %28)
  %30 = bitcast %swift.unowned* %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %30)
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

declare void @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4() #0

declare void @swift_once(i64*, i8*)

; Function Attrs: nounwind
declare void @llvm.assume(i1) #2

define hidden void @_TFC4clos6aClassD(%C4clos6aClass*) #0 {
entry:
  %1 = call %swift.refcounted* @_TFC4clos6aClassd(%C4clos6aClass* %0)
  %2 = bitcast %swift.refcounted* %1 to %C4clos6aClass*
  %3 = bitcast %C4clos6aClass* %2 to %swift.refcounted*
  call void @swift_deallocClassInstance(%swift.refcounted* %3, i64 24, i64 7)
  ret void
}

define hidden %swift.refcounted* @_TFC4clos6aClassd(%C4clos6aClass*) #0 {
entry:
  %1 = bitcast %C4clos6aClass* %0 to %swift.refcounted*
  ret %swift.refcounted* %1
}

define hidden i64 @_TFC4clos6aClassg5valueSi(%C4clos6aClass*) #0 {
entry:
  %1 = getelementptr inbounds %C4clos6aClass, %C4clos6aClass* %0, i32 0, i32 1
  %._value = getelementptr inbounds %Si, %Si* %1, i32 0, i32 0
  %2 = load i64, i64* %._value, align 8
  ret i64 %2
}

define hidden void @_TFC4clos6aClasss5valueSi(i64, %C4clos6aClass*) #0 {
entry:
  %2 = getelementptr inbounds %C4clos6aClass, %C4clos6aClass* %1, i32 0, i32 1
  %._value = getelementptr inbounds %Si, %Si* %2, i32 0, i32 0
  store i64 %0, i64* %._value, align 8
  ret void
}

define hidden { i8*, i64 } @_TFC4clos6aClassm5valueSi(i8*, [24 x i8]* nocapture dereferenceable(24), %C4clos6aClass*) #0 {
entry:
  %3 = getelementptr inbounds %C4clos6aClass, %C4clos6aClass* %2, i32 0, i32 1
  %4 = bitcast %Si* %3 to i8*
  %5 = insertvalue { i8*, i64 } undef, i8* %4, 0
  %6 = insertvalue { i8*, i64 } %5, i64 0, 1
  ret { i8*, i64 } %6
}

define hidden %C4clos6aClass* @_TFC4clos6aClasscfT_S0_(%C4clos6aClass*) #0 {
entry:
  %1 = getelementptr inbounds %C4clos6aClass, %C4clos6aClass* %0, i32 0, i32 1
  %._value = getelementptr inbounds %Si, %Si* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  ret %C4clos6aClass* %0
}

define hidden %C4clos6aClass* @_TFC4clos6aClassCfT_S0_(%swift.type*) #0 {
entry:
  %1 = call %swift.type* @_TMaC4clos6aClass() #5
  %2 = call noalias %swift.refcounted* @rt_swift_allocObject(%swift.type* %1, i64 24, i64 7) #2
  %3 = bitcast %swift.refcounted* %2 to %C4clos6aClass*
  %4 = call %C4clos6aClass* @_TFC4clos6aClasscfT_S0_(%C4clos6aClass* %3)
  ret %C4clos6aClass* %4
}

; Function Attrs: nounwind readnone
define hidden %swift.type* @_TMaC4clos6aClass() #3 {
entry:
  %0 = load %swift.type*, %swift.type** @_TMLC4clos6aClass, align 8
  %1 = icmp eq %swift.type* %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call %objc_class* @rt_swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%C4clos6aClass*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, i64 (%C4clos6aClass*)*, void (i64, %C4clos6aClass*)*, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)*, %C4clos6aClass* (%C4clos6aClass*)*, i64 }>, <{ void (%C4clos6aClass*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, i64 (%C4clos6aClass*)*, void (i64, %C4clos6aClass*)*, { i8*, i64 } (i8*, [24 x i8]*, %C4clos6aClass*)*, %C4clos6aClass* (%C4clos6aClass*)*, i64 }>* @_TMfC4clos6aClass, i32 0, i32 2) to %objc_class*))
  %3 = bitcast %objc_class* %2 to %swift.type*
  store atomic %swift.type* %3, %swift.type** @_TMLC4clos6aClass release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %4 = phi %swift.type* [ %0, %entry ], [ %3, %cacheIsNull ]
  ret %swift.type* %4
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_unownedRetain(%swift.refcounted*) #4 {
entry:
  %load = load void (%swift.refcounted*)*, void (%swift.refcounted*)** @_swift_unownedRetain
  tail call void %load(%swift.refcounted* %0)
  ret void
}

define private void @objectdestroy(%swift.refcounted*) #0 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %swift.weak }>*
  %2 = getelementptr inbounds <{ %swift.refcounted, %swift.weak }>, <{ %swift.refcounted, %swift.weak }>* %1, i32 0, i32 1
  call void @swift_weakDestroy(%swift.weak* %2) #2
  call void @rt_swift_deallocObject(%swift.refcounted* %0, i64 24, i64 7)
  ret void
}

declare void @swift_weakDestroy(%swift.weak*)

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_deallocObject(%swift.refcounted*, i64, i64) #4 {
entry:
  %load = load void (%swift.refcounted*, i64, i64)*, void (%swift.refcounted*, i64, i64)** @_swift_deallocObject
  tail call void %load(%swift.refcounted* %0, i64 %1, i64 %2)
  ret void
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden %swift.refcounted* @rt_swift_allocObject(%swift.type*, i64, i64) #4 {
entry:
  %load = load %swift.refcounted* (%swift.type*, i64, i64)*, %swift.refcounted* (%swift.type*, i64, i64)** @_swift_allocObject
  %3 = tail call %swift.refcounted* %load(%swift.type* %0, i64 %1, i64 %2)
  ret %swift.refcounted* %3
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_retain(%swift.refcounted*) #4 {
entry:
  %load = load void (%swift.refcounted*)*, void (%swift.refcounted*)** @_swift_retain
  tail call void %load(%swift.refcounted* %0)
  ret void
}

declare void @swift_weakInit(%swift.weak*, %swift.refcounted*)

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_release(%swift.refcounted*) #4 {
entry:
  %load = load void (%swift.refcounted*)*, void (%swift.refcounted*)** @_swift_release
  tail call void %load(%swift.refcounted* %0)
  ret void
}

define linkonce_odr hidden void @_TF4closU_FT_T_(%C4clos6aClass*, %swift.refcounted*) #0 {
entry:
  %2 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.weak }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %swift.weak }>, <{ %swift.refcounted, %swift.weak }>* %2, i32 0, i32 1
  call void bitcast (void (%swift.refcounted*)* @rt_swift_unownedRetainStrong to void (%C4clos6aClass*)*)(%C4clos6aClass* %0) #2
  %4 = getelementptr inbounds %C4clos6aClass, %C4clos6aClass* %0, i32 0, i32 0, i32 0
  %5 = load %swift.type*, %swift.type** %4, align 8
  %6 = bitcast %swift.type* %5 to void (i64, %C4clos6aClass*)**
  %7 = getelementptr inbounds void (i64, %C4clos6aClass*)*, void (i64, %C4clos6aClass*)** %6, i64 11
  %8 = load void (i64, %C4clos6aClass*)*, void (i64, %C4clos6aClass*)** %7, align 8, !invariant.load !11
  %9 = bitcast void (i64, %C4clos6aClass*)* %8 to i8*
  %10 = bitcast i8* %9 to void (i64, %C4clos6aClass*)*
  call void %10(i64 42, %C4clos6aClass* %0)
  call void bitcast (void (%swift.refcounted*)* @rt_swift_release to void (%C4clos6aClass*)*)(%C4clos6aClass* %0) #2
  %11 = call %C4clos6aClass* bitcast (%swift.refcounted* (%swift.weak*)* @swift_weakLoadStrong to %C4clos6aClass* (%swift.weak*)*)(%swift.weak* %3) #2
  %12 = ptrtoint %C4clos6aClass* %11 to i64
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %16, label %14

; <label>:14                                      ; preds = %entry
  %15 = inttoptr i64 %12 to %C4clos6aClass*
  br label %17

; <label>:16                                      ; preds = %entry
  br label %26

; <label>:17                                      ; preds = %14
  %18 = phi %C4clos6aClass* [ %15, %14 ]
  %19 = getelementptr inbounds %C4clos6aClass, %C4clos6aClass* %18, i32 0, i32 0, i32 0
  %20 = load %swift.type*, %swift.type** %19, align 8
  %21 = bitcast %swift.type* %20 to void (i64, %C4clos6aClass*)**
  %22 = getelementptr inbounds void (i64, %C4clos6aClass*)*, void (i64, %C4clos6aClass*)** %21, i64 11
  %23 = load void (i64, %C4clos6aClass*)*, void (i64, %C4clos6aClass*)** %22, align 8, !invariant.load !11
  %24 = bitcast void (i64, %C4clos6aClass*)* %23 to i8*
  %25 = bitcast i8* %24 to void (i64, %C4clos6aClass*)*
  call void %25(i64 42, %C4clos6aClass* %18)
  call void bitcast (void (%swift.refcounted*)* @rt_swift_release to void (%C4clos6aClass*)*)(%C4clos6aClass* %18) #2
  br label %26

; <label>:26                                      ; preds = %17, %16
  call void @rt_swift_release(%swift.refcounted* %1) #2
  call void bitcast (void (%swift.refcounted*)* @rt_swift_unownedRelease to void (%C4clos6aClass*)*)(%C4clos6aClass* %0) #2
  ret void
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_unownedRetainStrong(%swift.refcounted*) #4 {
entry:
  %load = load void (%swift.refcounted*)*, void (%swift.refcounted*)** @_swift_unownedRetainStrong
  tail call void %load(%swift.refcounted* %0)
  ret void
}

define private void @objectdestroy.1(%swift.refcounted*) #0 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>*
  %2 = getelementptr inbounds <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>, <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>* %1, i32 0, i32 1
  %3 = bitcast %swift.unowned* %2 to %C4clos6aClass**
  %toDestroy = load %C4clos6aClass*, %C4clos6aClass** %3, align 8
  call void bitcast (void (%swift.refcounted*)* @rt_swift_unownedRelease to void (%C4clos6aClass*)*)(%C4clos6aClass* %toDestroy) #2
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>, <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>* %1, i32 0, i32 2
  %toDestroy1 = load %swift.refcounted*, %swift.refcounted** %4, align 8
  call void @rt_swift_release(%swift.refcounted* %toDestroy1) #2
  call void @rt_swift_deallocObject(%swift.refcounted* %0, i64 32, i64 7)
  ret void
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_unownedRelease(%swift.refcounted*) #4 {
entry:
  %load = load void (%swift.refcounted*)*, void (%swift.refcounted*)** @_swift_unownedRelease
  tail call void %load(%swift.refcounted* %0)
  ret void
}

define internal void @_TPA__TF4closU_FT_T_(%swift.refcounted*) #0 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>*
  %2 = getelementptr inbounds <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>, <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>* %1, i32 0, i32 1
  %3 = bitcast %swift.unowned* %2 to %C4clos6aClass**
  %4 = load %C4clos6aClass*, %C4clos6aClass** %3, align 8
  call void bitcast (void (%swift.refcounted*)* @rt_swift_unownedRetain to void (%C4clos6aClass*)*)(%C4clos6aClass* %4) #2
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>, <{ %swift.refcounted, %swift.unowned, %swift.refcounted* }>* %1, i32 0, i32 2
  %6 = load %swift.refcounted*, %swift.refcounted** %5, align 8
  call void @rt_swift_retain(%swift.refcounted* %6) #2
  call void @rt_swift_release(%swift.refcounted* %0) #2
  tail call void @_TF4closU_FT_T_(%C4clos6aClass* %4, %swift.refcounted* %6) #0
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

declare void @swift_deallocClassInstance(%swift.refcounted*, i64, i64)

define private %swift.type** @get_field_types_aClass(%swift.type* %aClass) #0 {
entry:
  %0 = load %swift.type**, %swift.type*** @field_type_vector_aClass, align 8
  %1 = icmp eq %swift.type** %0, null
  br i1 %1, label %build_field_types, label %done

build_field_types:                                ; preds = %entry
  %2 = call noalias i8* @rt_swift_slowAlloc(i64 8, i64 7) #2
  %3 = bitcast i8* %2 to %swift.type**
  %4 = getelementptr inbounds %swift.type*, %swift.type** %3, i32 0
  store %swift.type* @_TMSi, %swift.type** %4, align 8
  %5 = ptrtoint %swift.type** %3 to i64
  %6 = cmpxchg i64* bitcast (%swift.type*** @field_type_vector_aClass to i64*), i64 0, i64 %5 seq_cst seq_cst
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  br i1 %7, label %done, label %race_lost

race_lost:                                        ; preds = %build_field_types
  call void @rt_swift_slowDealloc(i8* %2, i64 8, i64 7) #2
  %9 = inttoptr i64 %8 to %swift.type**
  br label %done

done:                                             ; preds = %race_lost, %build_field_types, %entry
  %10 = phi %swift.type** [ %0, %entry ], [ %3, %build_field_types ], [ %9, %race_lost ]
  ret %swift.type** %10
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden %objc_class* @rt_swift_getInitializedObjCClass(%objc_class*) #4 {
entry:
  %load = load %objc_class* (%objc_class*)*, %objc_class* (%objc_class*)** @_swift_getInitializedObjCClass
  %1 = tail call %objc_class* %load(%objc_class* %0)
  ret %objc_class* %1
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden i8* @rt_swift_slowAlloc(i64, i64) #4 {
entry:
  %load = load i8* (i64, i64)*, i8* (i64, i64)** @_swift_slowAlloc
  %2 = tail call i8* %load(i64 %0, i64 %1)
  ret i8* %2
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_slowDealloc(i8*, i64, i64) #4 {
entry:
  %load = load void (i8*, i64, i64)*, void (i8*, i64, i64)** @_swift_slowDealloc
  tail call void %load(i8* %0, i64 %1, i64 %2)
  ret void
}

declare %swift.refcounted* @swift_weakLoadStrong(%swift.weak*)

attributes #0 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+fxsr,+mmx,+sse,+sse2,+sse3" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }
attributes #3 = { nounwind readnone "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+fxsr,+mmx,+sse,+sse2,+sse3" }
attributes #4 = { noinline nounwind }
attributes #5 = { nounwind readnone }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !9, !10}

!0 = !{i32 1, !"Objective-C Version", i32 2}
!1 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!2 = !{i32 1, !"Objective-C Image Info Section", !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = !{i32 4, !"Objective-C Garbage Collection", i32 1024}
!4 = !{i32 1, !"Objective-C Class Properties", i32 64}
!5 = !{i32 6, !"Linker Options", !6}
!6 = !{!7, !8}
!7 = !{!"-lswiftCore"}
!8 = !{!"-lobjc"}
!9 = !{i32 1, !"PIC Level", i32 2}
!10 = !{i32 1, !"Swift Version", i32 4}
!11 = !{}
